{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { SplashScreen } from \"@capacitor/splash-screen\";\nimport { StatusBar, Style } from \"@capacitor/status-bar\";\nimport { Capacitor } from \"@capacitor/core\";\nimport { Network } from '@capacitor/network';\nimport { Toast } from '@capacitor/toast';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./services/web.service\";\nimport * as i3 from \"./services/translate-config.service\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platform, webApi, translateConfigService) {\n      this.platform = platform;\n      this.webApi = webApi;\n      this.translateConfigService = translateConfigService;\n      this.initializeApp();\n    }\n\n    initializeApp() {\n      this.platform.ready().then(() => {\n        SplashScreen.hide();\n        this.updateAppLanguage();\n        this.setStatusBar();\n        this.updateDatabase();\n        this.checkConnection();\n      });\n    }\n\n    setStatusBar() {\n      if (Capacitor.getPlatform() !== 'web') {\n        const setStatusBarStyleLight = () => __awaiter(this, void 0, void 0, function* () {\n          yield StatusBar.setStyle({\n            style: Style.Light\n          });\n          yield StatusBar.setBackgroundColor({\n            color: \"#fafafa\"\n          });\n        });\n\n        setStatusBarStyleLight();\n      }\n    }\n\n    checkConnection() {\n      return __awaiter(this, void 0, void 0, function* () {\n        Network.addListener('networkStatusChange', status => {\n          console.log('Network status ', status);\n\n          if (!status.connected) {\n            Toast.show({\n              text: 'Internet Connection Lost!'\n            });\n          }\n        });\n        let status = yield Network.getStatus();\n\n        if (!status.connected) {\n          yield Toast.show({\n            text: 'Internet Connection Lost!'\n          });\n        }\n      });\n    }\n\n    updateDatabase() {\n      this.webApi.getData().subscribe(data => {\n        if (data[0].status == \"success\") {\n          localStorage.setItem(\"games\", JSON.stringify(data[0].data[0]));\n        }\n      });\n    }\n\n    updateAppLanguage() {\n      if (!localStorage.getItem(\"appLanguage\")) {\n        localStorage.setItem(\"appLanguage\", \"en\");\n        this.systemLanguage = \"en\";\n      } else {\n        this.systemLanguage = localStorage.getItem(\"appLanguage\");\n      }\n\n      this.translateConfigService.setLanguage(this.systemLanguage);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.WebService), i0.ɵɵdirectiveInject(i3.TranslateConfigService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\");\n        i0.ɵɵelement(1, \"ion-router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i1.IonApp, i1.IonRouterOutlet],\n    styles: [\".side-account-img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin:5% auto 0;border-radius:150px;height:100px;height:70px;width:70px;overflow:hidden}.custom-round-badge[_ngcontent-%COMP%]{position:absolute;right:10px;top:12px;font-size:8px;padding:6px 8px;border-radius:10px}.side-left-space[_ngcontent-%COMP%]{padding-left:16px}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}